name: Build OpenWrt

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai
  openwrt_root: /mnt/openwrt

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      with:
        repository: immortalwrt/immortalwrt
        ref: ${{ env.REPO_BRANCH }}

    - name: Prepare build environment
      run: |
        sudo apt update
        sudo apt install -y build-essential libncurses5-dev gawk git gettext libssl-dev xsltproc unzip python3 python3-distutils jq
        sudo timedatectl set-timezone ${{ env.TZ }}

    - name: Copy diy1.sh and diy2.sh scripts
      run: |
        cp immortalwrt-24/diy1.sh .
        cp immortalwrt-24/diy2.sh .
        chmod +x diy1.sh diy2.sh

    - name: Run diy1.sh (Before feeds update)
      run: ./diy1.sh

    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Run diy2.sh (After feeds update)
      run: ./diy2.sh

    - name: Clean build cache before compiling
      run: |
        cd ${{ env.openwrt_root }}
        make clean
        rm -rf build_dir tmp

    - name: Configure build
      run: |
        cd ${{ env.openwrt_root }}
        make defconfig

    - name: Download package sources
      run: |
        cd ${{ env.openwrt_root }}
        make download -j$(nproc)

    - name: Build firmware
      run: |
        cd ${{ env.openwrt_root }}
        make -j$(nproc) || make -j1 V=s

    # 上传步骤暂时注释，确认编译正常后再启用
    # - name: Upload firmware artifact (optional)
    #   if: success() && env.UPLOAD_FIRMWARE == 'true'
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: openwrt-firmware-${{ github.run_id }}
    #     path: ${{ env.openwrt_root }}/bin/targets/

    - name: Telegram notification (optional)
      if: always()
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHATID: ${{ secrets.TELEGRAM_CHATID }}
      run: |
        duration=$((($(date +%s)-${{ github.event.head_commit.timestamp }})/60))
        if [ ${{ job.status }} == 'success' ]; then
          content="🎉 OpenWrt 编译成功！用时 ${duration} 分钟。"
        else
          content="❌ OpenWrt 编译失败！用时 ${duration} 分钟。"
        fi
        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" -d chat_id=${TELEGRAM_CHATID} -d text="$content"
